@{
    ViewData["Title"] = "文章編輯";
}
@model article
@{
    article target = Model;
    var tempTime = (DateTime)target!.TravelTime!;
    var time = tempTime.ToString("yyyy-MM-ddTHH:mm");
    string content = target!.Contents!;
}
<link rel="stylesheet" href="~/css/article.css">

<script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>
@* <script src="~/lib/_js/jquery-3.6.0.js"></script> *@
<script src="https://cdn.tiny.cloud/1/cx5w3vy6l6bg0senjow539pjj585n4wqopo9s4r3viuyx88c/tinymce/6/tinymce.min.js"
        referrerpolicy="origin"></script>
<input type="text" id="articleId" value="@target.ArticleId" style="display:none;">
<br />
<div class="container">

    <div class="row justify-content-center align-items-center">
        <!-- 创建三个列（columns） -->
        <div class="col-sm-2">
            <img src="@target.Images" id="articleImage" style="width: 150px; height: 150px; cursor: pointer;" />
            <input type="file" id="articleImageUpload" style="display:none;" />
        </div>
        <div class="col-sm-8 text-center">
            <div class="row">
                <div class="col-auto">
                    <label for="title" class="articleLabel">標題:</label>
                </div>
                <div class="col">
                    <!-- 添加 .form-control 类 -->
                    <input type="text" id="title" value="@target.Title" class="form-control articleInput">
                </div>
            </div>
            <div class="row">
                <div class="col-auto">
                    <label for="subtitle" class="articleLabel">副標題:</label>
                </div>
                <div class="col">
                    <!-- 添加 .form-control 类 -->
                    <input type="text" id="subtitle" value="@target.Subtitle" class="form-control articleInput">
                </div>
            </div>
            <div class="row">
                <div class="col-auto">
                    <label for="travelTime" class="articleLabel">時間:</label>
                </div>
                <div class="col">
                    <!-- 添加 .form-control 类 -->
                    <input type="datetime-local" id="travelTime" value="@time" class="form-control articleInput">
                </div>
            </div>
        </div>
        <div class="col-sm-2">
            
            <div>
                <button id="saveButton" class="btn btn-dark buttons">儲存</button>
                <button id="deleteButton" class="btn btn-danger buttons">删除</button>
                @*                 <button id="testButton" class="btn btn-danger">測試</button> *@
            </div>

        </div>
    </div>
</div>

<div>
    <textarea id="tiny"></textarea>
</div>
<div id="notification">562323</div>
<script>
    let backendData = @Html.Raw(Json.Serialize(content));
    console.log(backendData);
    $(function () {
        let articleId = $('#articleId').val();
        const image_upload_handler = (blobInfo, progress) => new Promise((resolve, reject) => {
            const xhr = new XMLHttpRequest();
            xhr.withCredentials = false;
            xhr.open('POST', '/Article/UploadImage');

            xhr.upload.onprogress = (e) => {
                progress(e.loaded / e.total * 100);
            };

            xhr.onload = () => {
                if (xhr.status === 403) {
                    reject({ message: 'HTTP Error: ' + xhr.status, remove: true });
                    return;
                }

                if (xhr.status < 200 || xhr.status >= 300) {
                    reject('HTTP Error: ' + xhr.status);
                    return;
                }

                const json = JSON.parse(xhr.responseText);

                if (!json || typeof json.location != 'string') {
                    reject('Invalid JSON: ' + xhr.responseText);
                    return;
                }

                resolve(json.location);
            };

            xhr.onerror = () => {
                reject('Image upload failed due to a XHR Transport error. Code: ' + xhr.status);
            };

            const formData = new FormData();
            formData.append('file', blobInfo.blob());
            formData.append('articleId', articleId);

            xhr.send(formData);
        });
        tinymce.init({
            selector: '#tiny',
            plugins: 'image',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | image | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight ',
            automatic_uploads: true,
            images_upload_handler: image_upload_handler,
            file_picker_types: 'image',
            init_instance_callback: function (editor) {
                if (backendData == null) {
                    editor.setContent("");
                }
                else {
                    editor.setContent(backendData);
                }
            }
        });


        function save() {
            var contentImages = [];
            var editorContent = tinymce.get('tiny').getContent();
            editorContent = editorContent.replace(/src="img/g, 'src="/img');
            var tempElement = $('<div>').html(editorContent);
            tempElement.find('img').each(function () {
                var src = $(this).attr('src');
                contentImages.push(src.substring(src.lastIndexOf('/') + 1));
            });
            let articleData = {
                articleId: articleId,
                title: $('#title').val(),
                subtitle: $('#subtitle').val(),
                travelTime: $('#travelTime').val(),
                content: editorContent,
                contentImages: JSON.stringify(contentImages)
            };
            $.ajax({
                type: "POST",
                url: "/Article/Save", // 控制器的 URL
                data: articleData,
                success: function (response) {
                    showNotification("保存成功");
                }
            });

        }
        $('#saveButton').on('click', save);


        $('#deleteButton').on('click', function () {
            var confirmation = confirm("確定要刪除這篇草稿嗎？");
            if (confirmation) {
                $.post("/Article/Delete", { articleId: articleId })
                    .done(function () {
                        alert("刪除成功");
                        window.location = "/Article/Draft/"
                    })
            }
        });

        $('#articleImage').on('click', function () {
            $('#articleImageUpload').click();
        });

        $('#articleImageUpload').on('change', function () {
            var file = this.files[0];
            var formData = new FormData();
            formData.append('file', file);
            formData.append('articleId', $('#articleId').val());
            $.ajax({
                type: "post",
                url: "/Article/UploadArticleImage",
                data: formData,
                processData: false,  // 禁止 jQuery 处理数据
                contentType: false,  // 禁止 jQuery 设置内容类型
                success: function (src) {
                    $('#articleImage').prop('src', src);
                }
            });
        });


        function showNotification(message) {
            $("#notification").text(message).css("display", "block")
            setTimeout(function () {
                $("#notification").css("display", "none");
            }, 1000)
        }
    });
</script>
